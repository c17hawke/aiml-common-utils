{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AIML Python Common Utilities","text":"<p>This repository provides a collection of utilities that are frequently used in various AIML applications.</p>"},{"location":"#current-version-features","title":"Current Version Features","text":"<p>The current version includes the following utilities:</p>"},{"location":"#common-utilities-","title":"Common utilities -","text":"<ol> <li> <p>YAML File Reader: This utility reads a YAML file and returns a ConfigBox type object.</p> </li> <li> <p>Directory Creator: This utility allows you to create multiple directories.</p> </li> <li> <p>JSON File Writer: This utility saves a dictionary as a JSON file</p> </li> <li> <p>JSON File Reader: This utility loads a JSON file. </p> </li> <li> <p>Binary File Writer: This utility saves a snapshot of data as a binary file.</p> </li> <li> <p>Binary File Reader: This utility loads a snapshot of data from a binary file:</p> </li> <li> <p>File Size Calculator: This utility calculates the size of a file in kilobytes:</p> </li> </ol> <p>Check the next page for examples - Common utilities</p>"},{"location":"#llm-openai-common-utilities","title":"LLM OpenAI Common Utilities","text":"<p>This utility contains the following utilities - </p> <ol> <li>Token calculator for GPT3.5-Turbo model: It can calculate the number of tokens as per the GPT3.5-Turbo model</li> </ol> <p>Check the respective page for examples - LLM OpenAI Common utilities</p>"},{"location":"Common_Utils/","title":"AIML Python Common Utilities","text":"<p>This repository provides a collection of utilities that are frequently used in various AIML applications.</p>"},{"location":"Common_Utils/#current-version-features","title":"Current Version Features","text":"<p>The current version includes the following utilities:</p>"},{"location":"Common_Utils/#1-simple-yaml-file-reader","title":"1. Simple YAML File Reader","text":"<p>This utility reads a YAML file and returns a dictionary type object. For instance, given a YAML file with the following content:</p> <pre><code># Scalars\nstring: \"Hello, World\"\ninteger: 25\nfloating_point: 3.14\nboolean: true\nnull_value: null\n\n# Sequences\nsequence:\n  - item1\n  - item2\n  - item3\n</code></pre> <p>You can access the content of the YAML file as follows:</p> <pre><code>import aiml_py_common_utils as aiml\n\ncontent = aiml.simple_read_yaml(path_to_yaml)\n\nprint(content[\"string\"])  # Outputs: \"Hello, World\"\nprint(content[\"integer\"])  # Outputs: 25\n</code></pre>"},{"location":"Common_Utils/#2-box-yaml-file-reader","title":"2. Box YAML File Reader","text":"<p>This utility reads a YAML file and returns a ConfigBox type object. For instance, given a YAML file with the following content:</p> <pre><code># Scalars\nstring: \"Hello, World\"\ninteger: 25\nfloating_point: 3.14\nboolean: true\nnull_value: null\n\n# Sequences\nsequence:\n  - item1\n  - item2\n  - item3\n</code></pre> <p>You can access the content of the YAML file as follows:</p> <pre><code>import aiml_py_common_utils as aiml\n\ncontent = aiml.box_read_yaml(path_to_yaml)\n\nprint(content.string)  # Outputs: \"Hello, World\"\nprint(content.integer)  # Outputs: 25\n</code></pre>"},{"location":"Common_Utils/#3-directory-creator","title":"3. Directory Creator","text":"<p>This utility allows you to create multiple directories. For example, to create directories named <code>dir_one</code>, <code>dir_two</code>, and <code>dir_three</code>, you can use the function as follows:</p> <pre><code>from pathlib import Path\nimport aiml_py_common_utils as aiml\n\nlist_of_directories_paths = [\n    Path(\"./dir_one\"),\n    Path(\"./dir_two\"),\n    Path(\"./dir_three\")\n]\n\naiml.create_directories(path_to_directories=list_of_directories_paths)\n</code></pre>"},{"location":"Common_Utils/#4-json-file-writer","title":"4. JSON File Writer","text":"<p>This utility saves a dict or list as a JSON file:</p> <pre><code>from pathlib import Path\nimport aiml_py_common_utils as aiml\n\nexample_dict = {\n  \"string\": \"Hello, World\",\n  \"integer\": 25,\n  \"floating_point\": 3.14,\n  \"boolean\": True,\n  \"null_value\": None,\n}\n\npath_to_json = Path(\"path/to/example.json\")\naiml.save_as_json(path=path_to_json)\n</code></pre>"},{"location":"Common_Utils/#5-simple-json-file-reader","title":"5. Simple JSON File Reader","text":"<p>This utility loads a JSON file as dictionary/list. For example, given a JSON file at a certain path containing:</p> <pre><code>{\n  \"string\": \"Hello, World\",\n  \"integer\": 25,\n  \"floating_point\": 3.14,\n  \"boolean\": true,\n  \"null_value\": null,\n}\n</code></pre> <p>You can load the content of the JSON file as follows:</p> <pre><code>from pathlib import Path\nimport aiml_py_common_utils as aiml\n\npath = Path(\"path/to/example.json\")\ncontent = load_json(path=path_to_json)\nprint(content[\"string\"])  # Outputs: \"Hello, World\"\nprint(content[\"integer\"])  # Outputs: 25\n</code></pre>"},{"location":"Common_Utils/#6-binary-file-writer","title":"6. Binary File Writer","text":"<p>This utility saves a snapshot of data as a binary file:</p> <pre><code>from pathlib import Path\nimport aiml_py_common_utils as aiml\n\nexample_dict = {\n  \"string\": \"Hello, World\",\n  \"integer\": 25,\n  \"floating_point\": 3.14,\n  \"boolean\": True,\n  \"null_value\": None,\n}\n\npath_to_bin = Path(\"path/to/example.bin\")\naiml.save_bin(data=example_dict, path=path_to_bin)\n</code></pre>"},{"location":"Common_Utils/#7-binary-file-reader","title":"7. Binary File Reader","text":"<p>This utility loads a snapshot of data from a binary file:</p> <pre><code>from pathlib import Path\nimport aiml_py_common_utils as aiml\n\npath_to_bin = Path(\"path/to/example.bin\")\nloaded_bin_content = aiml.load_bin(path=path_to_bin)\n</code></pre>"},{"location":"Common_Utils/#8-file-size-calculator","title":"8. File Size Calculator","text":"<p>This utility calculates the size of a file in kilobytes:</p> <pre><code>from pathlib import Path\nimport aiml_py_common_utils as aiml\n\nfilepath = Path(\"path/to/example.file\")\nsize_in_kb = aiml.get_size(path=filepath)\n</code></pre>"},{"location":"Common_Utils/#9-convert-dictjson-as-string","title":"9. Convert dict/json as string","text":"<p>This utility converts a dictionary or a list of dictionaries into a JSON string with specified indentation.</p> <pre><code>from pathlib import Path\nfrom aiml_py_common_utils import stringify_json\n\njson_as_string = stringify_json(data={\"key\": \"value\"})\n</code></pre>"},{"location":"LLM_OpenAI/","title":"LLM OpenAI Common Utilities","text":"<p>This utility contains the following utilities - </p> <ol> <li>Token calculator for GPT3.5-Turbo model: It can calculate the number of tokens as per the GPT3.5-Turbo model.</li> </ol> <p>Examples - </p> <pre><code>from aiml_py_common_utils.gen_ai import num_of_tokens_gpt35_turbo\n\nsentence = \"Hi there, how are you?\"\n\ntokens = num_of_tokens_gpt35_turbo(string=sentence)\nprint(tokens) # outputs = 7\n</code></pre>"}]}